const mongoose = require('mongoose');
// при помощи require() создаётся объект mongoose

// Модели можно создать при помощи интерфейса Schema. 
// Schema позволяет указать поля, которые будут в каждом документе, значения полей по умолчанию и требования по валидации.
// конструктор Schema создаёт новый экземпляр схемы, при этом различные поля задаются как параметры конструктора
const mealSchema = new mongoose.Schema({
    title: { //название нашего mealPlane
        type: String,
        required: true
    }
});

// Схема может содержать любое количество полей, причём каждое поле будет полем документа, хранимого в БД MongoDB
// Mongoose предусматривает встроенные валидаторы, валидаторы пользователя, синхронные и асинхронные валидаторы. 
// Во всех случаях можно задать допустимые диапазоны или значения, а также сообщения об ошибках при нарушении условий валидации
// Все SchemaTypes имеют встроенный валидатор required, который определяет, должно ли поле быть заданным перед сохранением документа


//Схемы "компилируются " в окончательную модель методом mongoose.model(). 
// После создания модели её можно использовать для поиска, создания, обновления и удаления объектов данного типа.
module.exports = mongoose.model('Meal', mealSchema);
// Первый аргумент - уникальное имя создаваемой для модели коллекции(Mongoose создаст коллекцию для модели Meal), 
// второй аргумент - схема, которая используется для создания модели (mealSchema).